# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
[tox]
envlist = bash_only, py27, py35
#skipsdist = True


[testenv]
deps =
    nose
    ; nose-testconfig
    flake8
    -rrequirements.txt

commands =
    {envpython} -m compileall -q pyngrm tests
    {envbindir}/flake8 pyngrm tests --max-line-length=100 --ignore=E402,E722
    nosetests {posargs}


# run bash dependent style tests
[testenv:bash_only]
whitelist_externals = /bin/bash
deps =

commands =
    ; all git-tracked *.py files (if exists any)
    ; should have `from __future__ import unicode_literals`
    ; except for empty files (the ones whose 'wc -l'==0)
    bash -c "! git ls-files '*.py' | xargs grep -L unicode_literals | grep -Fxv '(standard input)'\
      | xargs wc -l | grep -v ' total$' | grep -v '^[ \t]*0 '"

    ; all git-tracked *.py files (if exists any) should not have
    ; a 'u' prefix before string literal
    ; the following command will work in plain bash
    ; $ git ls-files '*.py' | xargs grep -PI "[^a-zA-Z\x7F-\xFFă]u['\"]"
    ; $ bash -c "! git ls-files '*.py' | xargs grep -PI \"[^a-zA-Z\x7F-\xFFă]u['\\\"]\""
    ; but in the tox environment, we have to split it by two due to complex escaping rules:
    bash -c "! git ls-files '*.py' | xargs grep -PI [^a-zA-Z\x7F-\xFFă]u[\']"
    bash -c '! git ls-files '*.py' | xargs grep -PI "[^a-zA-Z\x7F-\xFFă]u[\"]"'

    ; update pre-push hook to run tox itself on pushing to origin
    bash -c "f={toxinidir}/.git/hooks/pre-push; if ! [ -e $f ]; then echo -e \
        '#!/bin/bash\nif [ $\{1\}x == originx ]; then tox; fi' > $f && chmod +x $f; fi"
    ; style fixer
    bash {toxinidir}/.fix.sh
